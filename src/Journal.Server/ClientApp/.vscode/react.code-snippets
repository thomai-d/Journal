{
	// Place your ClientApp workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
		"New component": {
			"prefix": "fc",
			"body": [
				"import * as React from 'react';",
				"import { connect } from 'react-redux';",
				"import { Theme, makeStyles } from '@material-ui/core';",
				"import { AnyAction, Dispatch, bindActionCreators } from 'redux';",
				"import { ApplicationState } from '../../store/configureStore';",
				"",
				"const useStyle = makeStyles((theme: Theme) => ({",
				"    // TODO",
				"}));",
				"",
				"const stateToProps = (state: ApplicationState) => {",
				"  return {",
				"    // TODO",
				"  }",
				"}",
				"",
				"const dispatchToProps = (dispatch: Dispatch<AnyAction>) =>",
				"  bindActionCreators({",
				"    // TODO",
				"  }, dispatch);",
				"",
				"type Props = ReturnType<typeof stateToProps>;",
				"type DispatchProps = ReturnType<typeof dispatchToProps>;",
				"",
				"const ${1:name} = (props: Props & DispatchProps) => {",
				"",
				"  const classes = useStyle();",
				"",
				"  return (<>",
				"    $0",
				"  </>);",
				"}",
				"",
				"export default connect(stateToProps, dispatchToProps)(${1:name});",
			]
		},

		"Functional component - simple": {
			"prefix": "fcs",
			"body": [
				"import * as React from 'react';",
				"import { Theme, makeStyles } from '@material-ui/core';",
				"",
				"const useStyle = makeStyles((theme: Theme) => ({",
				"}));",
				"",
				"type Props = {",
				"  $0",
				"};",
				"",
				"export default (props: Props) => {",
				"",
				"  const classes = useStyle();",
				"",
				"  return (<>",
				"  </>);",
				"}",
			]
		},

		"Import": {
			"prefix": "im",
			"body": [
				"import { $0 } from '$1';",
			]
		}
}

